Q8. https://www.geeksforgeeks.org/find-the-largest-subarray-with-0-sum/
Given an array arr[] of length N, find the length of the longest sub-array with a sum equal to 0.

Examples:

Input: arr[] = {15, -2, 2, -8, 1, 7, 10, 23}
Output: 5
Explanation: The longest sub-array with elements summing up-to 0 is {-2, 2, -8, 1, 7}

Input: arr[] = {1, 2, 3}
Output: 0
Explanation: There is no subarray with 0 sum

Input:  arr[] = {1, 0, 3}
Output:  1
Explanation: The longest sub-array with elements summing up-to 0 is {0}

Solution:
import java.io.*;
import java.util.*;
public class longest_subarray_with_zero_sum {

	
	static int maxlength(int[] nums)
	{
		HashMap <Integer , Integer> hm = new HashMap<>();
		
		
		int sum =0;
		int maxlen=0;
		
		for(int i=0; i<nums.length; i++)
		{
			sum +=nums[i];
			
			if(sum ==0)
			{
				maxlen=i+1;
			}
			Integer prev_sum = hm.get(sum);
			
			if(prev_sum !=null)
			{
				maxlen = Math.max(maxlen, i-prev_sum);
			}
			else {
				hm.put(sum,i);
			}
		}
		
		return maxlen;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		 int arr[] = { 15, -2, 2, -8, 1, 7, 10, 23 };
		 System.out.println(maxlength(arr));

	}

}
